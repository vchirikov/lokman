// style guide https://developers.google.com/protocol-buffers/docs/style
// language guide proto3 https://developers.google.com/protocol-buffers/docs/proto3
// http rest options https://cloud.google.com/service-infrastructure/docs/service-management/reference/rpc/google.api#google.api.HttpRule
// wcf to grpc guide https://docs.microsoft.com/en-us/dotnet/architecture/grpc-for-wcf-developers

syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "Lokman.Protos";
option optimize_for = SPEED;

package lokman;

message LockRequest{
    string key = 1;
    // 3602.000015700s for example where 157 is timespan ticks
    google.protobuf.Duration duration = 2;
    int64 token = 3;

}
message LockResponse{
    string key = 1;
    int64 token = 2;
}

message LockInfo{
    string key = 1;
    bool is_locked = 2;
    int64 token = 3;
    google.protobuf.Timestamp expiration = 4;
}
message LockInfoResponse {
    repeated LockInfo locks = 1;
}

service DistributedLockService {
    rpc Lock(LockRequest) returns (LockResponse){
        option (google.api.http) = {
            post: "/v1/lock"
            body: "*"
        };
    }

    rpc GetLockInfo(google.protobuf.Empty) returns (LockInfoResponse){
        option (google.api.http) = {
            get: "/v1/lock"
        };
    }
}